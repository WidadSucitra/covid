{"version":3,"sources":["Components/WorldStats/WorldStats.js","Containers/Global/Global.js","Containers/Countries/PickCountries.js","Containers/Countries/Countries.js","App.js","reportWebVitals.js","index.js"],"names":["WorldStats","props","className","about","total","Global","state","result","a","axios","get","globalData","covid","data","console","log","this","setState","confirmed","value","recovered","deaths","lastUpdate","Stats","Object","keys","map","key","index","thousandSeparator","displayType","last","Component","PickCountries","fetchCountries","then","response","countries","handleChange","event","target","handleCountryChange","country","FormControl","NativeSelect","onChange","c","name","Countries","confirm","lastupdate","getData","catch","error","Fragment","Date","toDateString","start","end","duration","separator","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.223a7916.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './WorldStats.css'\r\n\r\nconst WorldStats = props => {\r\n    return(\r\n        <div className=\"worldStats-box\">\r\n            <div className=\"card box box-global\">\r\n                <div className=\"card-title c-title\">\r\n                <h1 className=\"about\">{props.about}</h1>\r\n                </div>\r\n                <div className=\"card-body c-body text-center\">\r\n                <h1 className=\"totalNumbers\">{props.total}</h1>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldStats;","import React, {Component} from 'react'\r\nimport './Global.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nimport WorldStats from '../../Components/WorldStats/WorldStats'\r\n\r\nexport default class Global extends Component{\r\n    \r\n    state={\r\n        result: {\r\n            \"confirmed\" : 0,\r\n            \"recovered\" : 0,\r\n            \"deaths\" : 0\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        var globalData = await axios.get(\"https://covid19.mathdro.id/api\")\r\n        let covid = globalData.data\r\n        console.log(\"Data: \",covid)\r\n\r\n        this.setState({\r\n            result: {\r\n                \"Confirmed\" : covid.confirmed.value,\r\n                \"Recovered\" : covid.recovered.value,\r\n                \"Deaths\" : covid.deaths.value\r\n            },\r\n            \"lastUpdate\": covid.lastUpdate\r\n        })\r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n        var Stats = Object.keys(this.state.result).map((key, index) => {\r\n            return <WorldStats\r\n                        key={index}\r\n                        about={key}\r\n                        total={<NumberFormat value={this.state.result[key]} thousandSeparator={true} displayType=\"text\" />}\r\n                        last= {this.state.lastUpdate}/>\r\n        })\r\n\r\n        const Date = Object.keys(this.state.result).map((key, index) => {\r\n            return console.log(this.state.result.lastUpdate)\r\n        })\r\n\r\n        \r\n\r\n        return(\r\n            <div className='Global'>\r\n                <h1 className='judul-besar'> Perkembangan Covid 19 </h1>\r\n                <h3 className='judul-global' >Global</h3>\r\n                <div className= \"world-stats\">\r\n                    {Stats}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\n\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default class PickCountries extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            countries:[],\r\n            country:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetchCountries()\r\n    }\r\n    fetchCountries=()=>{\r\n        axios.get(\"https://covid19.mathdro.id/api/countries\")\r\n        .then(response=>{\r\n            this.setState({\r\n                countries:response.data.countries\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        var value = event.target.value;\r\n        this.props.handleCountryChange(value);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <center>\r\n                <FormControl>\r\n                    <NativeSelect onChange={this.handleChange}>\r\n                        <option key=\"indonesia\" value=\"indonesia\">Indonesia</option>\r\n                        {\r\n                            this.state.countries.map(c=>(\r\n                                <option key={c.name} value={c.name}>{c.name}</option>\r\n                            ))\r\n                        }\r\n                    </NativeSelect>\r\n\r\n                </FormControl>\r\n            </center>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CountUp from 'react-countup'\r\nimport PickCountries from './PickCountries'\r\n\r\nimport'./Countries.css'\r\n\r\n\r\nexport default class Countries extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            confirm : null,\r\n            deaths: null,\r\n            recovered : null,\r\n            lastupdate: null,\r\n            country: null\r\n        }\r\n    }\r\n    handleCountryChange=(country)=>{\r\n        axios.get(\"https://covid19.mathdro.id/api/countries/\" + country)\r\n        .then(response=>{\r\n            this.setState({\r\n                confirm: response.data.confirmed.value,\r\n                recovered: response.data.recovered.value,\r\n                deaths: response.data.deaths.value,\r\n                lastupdate: response.data.lastUpdate\r\n            })\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData=()=>{\r\n        axios.get('https://covid19.mathdro.id/api/countries/ID')\r\n        .then(response=>{\r\n            this.setState({\r\n                confirm: response.data.confirmed.value,\r\n                recovered: response.data.recovered.value,\r\n                deaths: response.data.deaths.value,\r\n                lastupdate: response.data.lastUpdate\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            console.log(console.error.response)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"corona-body\">\r\n                    <center>\r\n                        <p className=\"lastupdate\">\r\n                                last update: {new Date(this.state.lastupdate).toDateString()}\r\n                        </p>\r\n                    </center>\r\n                    <PickCountries handleCountryChange={this.handleCountryChange} className=\"search\" />\r\n                    <div className= \"container\">\r\n                        <div className=\"card-deck card-decks\">\r\n                            <div className=\"card confirm box\">\r\n                                <div className=\"card-title c-title\">\r\n                                    <center>Confirmed</center>\r\n                                </div>\r\n                                <div className=\"card-body c-body text-center\">\r\n                                    <CountUp\r\n                                        start={0}\r\n                                        end={this.state.confirm}\r\n                                        duration={1}\r\n                                        separator=\",\"\r\n                                        className=\"number\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card recovered box\">\r\n                                <div className=\"card-title c-title\">\r\n                                    <center>Recovered</center>\r\n                                </div>\r\n                                <div className=\"card-body c-body text-center\">\r\n                                    <CountUp\r\n                                        start={0}\r\n                                        end={this.state.recovered}\r\n                                        duration={1}\r\n                                        separator=\",\"\r\n                                        className=\"number\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card deaths box\">\r\n                                <div className=\"card-title c-title\">\r\n                                    <center>Deaths</center>\r\n                                </div>\r\n                                <div className=\"card-body c-body text-center\">\r\n                                    <CountUp\r\n                                        start={0}\r\n                                        end={this.state.deaths}\r\n                                        duration={1}\r\n                                        separator=\",\"\r\n                                        className=\"number\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// import pages\nimport Global from './Containers/Global/Global'\nimport Countries from './Containers/Countries/Countries'\n\nfunction App() {\n    return (\n        <div> \n            <Global/>\n            <Countries/>\n        </div>\n        \n\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}